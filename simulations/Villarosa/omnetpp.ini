[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
network = syntetictracegenerator.simulations.Villarosa.DummyScenario

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

# sim-time-limit = 1200s

# **.sctp.**.scalar-recording = false
# **.sctp.**.vector-recording = false
# **.routingRecorder.enabled = false
##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 3
repeat = 15
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
#**.sctp.**.scalar-recording = false
#**.sctp.**.vector-recording = false
#**.scalar-recording = true
#**.vector-recording = false
**.routingRecorder.enabled = false


**.scalar-recording = false
**.vector-recording = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
*.veinsManager.moduleType = "simu5g.nodes.cars.NRCar"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("heterogeneous.launchd.xml")
*.veinsManager.updateInterval = 0.1s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobilityType = "VeinsInetMobility"


##########################################################
#              LTE specific parameters                   #
##########################################################

# Number of Resource Blocks
**.numBands = 25 

# Transmission Power
**.ueTxPower = 26
**.eNodeBTxPower = 46

# Enable dynamic association of UEs (based on best SINR)
*.car[*].cellularNic.nrPhy.dynamicCellAssociation = true
*.car[*].masterId = 0     # ignored if dynamic association is disabled
*.car[*].macCellId = 0    # ignored if dynamic association is disabled
*.car[*].nrMasterId = 1     # ignored if dynamic association is disabled
*.car[*].nrMacCellId = 1    # ignored if dynamic association is disabled

# eNodeB configuration
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1
**.gNodeB2.macCellId = 2
**.gNodeB2.macNodeId = 2 


# Enable handover
*.car[*].cellularNic.nrPhy.enableHandover = true
*.gNodeB*.cellularNic.phy.enableHandover = true
*.gNodeB*.cellularNic.phy.handoverLatency = 50ms
*.gNodeB*.cellInfo.broadcastMessageInterval = 1s # eNB will sends broadcast triggers every second

# X2 and SCTP configuration
*.gNodeB*.numX2Apps = 2    # one x2App per peering eNodeB
*.gNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

*.gNodeB1.x2App[0].client.connectAddress = "gNodeB2%x2ppp0"
*.gNodeB1.x2App[1].client.connectAddress = "gNodeB3%x2ppp0" 

*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp0"
*.gNodeB2.x2App[1].client.connectAddress = "gNodeB3%x2ppp0"

*.gNodeB3.x2App[0].client.connectAddress = "gNodeB1%x2ppp0" 
*.gNodeB3.x2App[1].client.connectAddress = "gNodeB2%x2ppp0" 

**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false


# ----- MEC STUFF (AS) ----

##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)

**.hasRNISupport = true

#########################_Car Side_#######################

#------------UEWarningAlertApp---------------
*.car[*].numApps = 2
*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"

*.car[*].app[1].typename = "UEPingPongApp"
#*.car[*].app[1].positionY = 150

*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].startTime = 1s										#when sending start warning alert app									#period to sending messages
*.car[*].app[1].stopTime = 30s										#when sending stop MEC warning alert app

#*.car[*].app[0].requiredRam = 10MB
#*.car[*].app[0].requiredDisk = 10MB
#*.car[*].app[0].requiredCpu = 0.01
#----------------------------------------

######################_ME Host Side_#####################
# resources available
*.mecHost.maxMECApps = 100												#max ME Apps to instantiate
*.mecHost.maxRam = 32GB													#max KBytes of Ram Space 
*.mecHost.maxDisk = 100TB												#max KBytes of Ram Space 
*.mecHost.maxCpuSpeed = 400000											#max percentage of CPU
#----------------------------------------

*.mecHost.eNBList = "gNodeB1"


#-------ETCI MES Services:---------------

*.mecHost.mecPlatform.numMecServices = 1
*.mecHost.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost.mecPlatform.mecService[0].localAddress = "mecHost.mecPlatform" #da cambiare!!
*.mecHost.mecPlatform.mecService[0].localPort = 10020

*.mecHost.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost.mecPlatform.mecService[0].requestServiceTime = 100us
*.mecHost.mecPlatform.mecService[0].subscriptionServiceTime = 11us

*.mecHost.mecPlatform.serviceRegistry.localAddress = "mecHost.mecPlatform" #da cambiare!!
*.mecHost.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time


# ME Host connected
**.gNodeB*.mecHost = "mecHost"

*.mecHost.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
**.mecOrchestrator.mecHostList = "mecHost"
