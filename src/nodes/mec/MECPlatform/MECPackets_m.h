//
// Generated file, do not edit! Created by nedtool 6.0 from nodes/mec/MECPlatform/MECPackets.msg.
//

#ifndef __MECPACKETS_M_H
#define __MECPACKETS_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class MECPacket;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

/**
 * Class generated from <tt>nodes/mec/MECPlatform/MECPackets.msg:15</tt> by nedtool.
 * <pre>
 * class MECPacket extends inet::FieldsChunk
 * {
 *     unsigned int sno;
 *     simtime_t timestamp;
 *     //type of message
 *     string type;
 * }
 * </pre>
 */
class MECPacket : public ::inet::FieldsChunk
{
  protected:
    unsigned int sno = 0;
    omnetpp::simtime_t timestamp = SIMTIME_ZERO;
    omnetpp::opp_string type;

  private:
    void copy(const MECPacket& other);

  protected:
    bool operator==(const MECPacket&) = delete;

  public:
    MECPacket();
    MECPacket(const MECPacket& other);
    virtual ~MECPacket();
    MECPacket& operator=(const MECPacket& other);
    virtual MECPacket *dup() const override {return new MECPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getSno() const;
    virtual void setSno(unsigned int sno);
    virtual omnetpp::simtime_t getTimestamp() const;
    virtual void setTimestamp(omnetpp::simtime_t timestamp);
    virtual const char * getType() const;
    virtual void setType(const char * type);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MECPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MECPacket& obj) {obj.parsimUnpack(b);}

#endif // ifndef __MECPACKETS_M_H

